McDonalds_FullData <- read.csv("https://raw.githubusercontent.com/xiuqili-xl/CB201_Spring2023/main/data/McDonalds_menu.csv")
library(dplyr)
McDonalds_FullData
glimpse(McDonalds_FullData)
# Filter for outlier
outlier <- McDonalds_FullData %>%
filter(Protein > 75)
# Hint: str_detect() can be used to find certain text patterns
chicken <- McDonalds_FullData %>%
filter(str_detect(string = Item, pattern = "Chicken"))
library(stringr)
# Hint: str_detect() in the stringr package can be used to find certain text patterns
chicken <- McDonalds_FullData %>%
filter(str_detect(string = Item, pattern = "Chicken"))
ggplot(data = McDonalds_FullData,
mapping = aes(x = Calories, y = Protein)) +
geom_point(shape = 21, size = 1.5, color = "grey51") +
geom_point(data = chicken,
shape = 21, size = 1.5, color = "indianred4", fill = "indianred1") +
geom_text_repel(data = outlier, mapping = aes(label = Item),
size = 3, segment.size = 0.2, nudge_x = -20, nudge_y = 5) +
scale_x_continuous(limits = c(0, 2000),
breaks = seq(from = 0, to = 2000, by = 500)) +
scale_y_continuous(limits = c(0, 100),
breaks = seq(from = 0, to = 100, by = 25)) +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
labs(x = "Calories (Cal)", y = "Protein (g)",
title = "Protein and Calorie of Items on McDonald's Menu")
ggplot(data = McDonalds_FullData,
mapping = aes(x = Calories, y = Protein)) +
geom_point(shape = 21, size = 1.5, color = "grey51") +
geom_point(data = chicken,
shape = 21, size = 1.5, color = "indianred4", fill = "indianred1") +
geom_text_repel(data = outlier, mapping = aes(label = Item),
size = 3, segment.size = 0.2, nudge_x = -20, nudge_y = 5) +
scale_x_continuous(limits = c(0, 2000),
breaks = seq(from = 0, to = 2000, by = 500)) +
scale_y_continuous(limits = c(0, 100),
breaks = seq(from = 0, to = 100, by = 25)) +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
labs(x = "Calories (Cal)", y = "Protein (g)",
title = "Protein and Calorie of Items on McDonald's Menu")
library(tidyverse)
ggplot(data = McDonalds_FullData,
mapping = aes(x = Calories, y = Protein)) +
geom_point(shape = 21, size = 1.5, color = "grey51") +
geom_point(data = chicken,
shape = 21, size = 1.5, color = "indianred4", fill = "indianred1") +
geom_text_repel(data = outlier, mapping = aes(label = Item),
size = 3, segment.size = 0.2, nudge_x = -20, nudge_y = 5) +
scale_x_continuous(limits = c(0, 2000),
breaks = seq(from = 0, to = 2000, by = 500)) +
scale_y_continuous(limits = c(0, 100),
breaks = seq(from = 0, to = 100, by = 25)) +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
labs(x = "Calories (Cal)", y = "Protein (g)",
title = "Protein and Calorie of Items on McDonald's Menu")
ggplot(data = McDonalds_FullData,
mapping = aes(x = Calories, y = Protein)) +
geom_point(shape = 21, size = 1.5, color = "grey51") +
geom_point(data = chicken,
shape = 21, size = 1.5, color = "indianred4", fill = "indianred1") +
geom_text_repel(data = outlier, mapping = aes(label = Item),
size = 3, segment.size = 0.2, nudge_x = -20, nudge_y = 5) +
scale_x_continuous(limits = c(0, 2000),
breaks = seq(from = 0, to = 2000, by = 500)) +
scale_y_continuous(limits = c(0, 100),
breaks = seq(from = 0, to = 100, by = 25)) +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
labs(x = "Calories (Cal)", y = "Protein (g)",
title = "Protein and Calorie of Items on McDonald's Menu")
library(ggrepel)
ggplot(data = McDonalds_FullData,
mapping = aes(x = Calories, y = Protein)) +
geom_point(shape = 21, size = 1.5, color = "grey51") +
geom_point(data = chicken,
shape = 21, size = 1.5, color = "indianred4", fill = "indianred1") +
geom_text_repel(data = outlier, mapping = aes(label = Item),
size = 3, segment.size = 0.2, nudge_x = -20, nudge_y = 5) +
scale_x_continuous(limits = c(0, 2000),
breaks = seq(from = 0, to = 2000, by = 500)) +
scale_y_continuous(limits = c(0, 100),
breaks = seq(from = 0, to = 100, by = 25)) +
theme_bw() +
theme(panel.grid.minor = element_blank()) +
labs(x = "Calories (Cal)", y = "Protein (g)",
title = "Protein and Calorie of Items on McDonald's Menu")
# Remember we previously defined several vectors
item <- c("Egg McMuffin", "Sausage McMuffin", "Baked Apple Pie", "Chocolate Chip Cookie")
calories <- c(300, 370, 250, 160)
fat <- c(13, 23, 13, 8)
protein <- c(17, 14, 2, 2)
meat <- c(TRUE, TRUE, FALSE, FALSE)
# Create a data frame with previously defined vectors
McDonalds <- data.frame(Item = item, Calories = calories, Fat = fat, Protein = protein, Meat = meat)
# Print data frame. Notice: the column names are Item, Calorie, Fat, Protein, and Meat. These columns store values from our previously defined vector
McDonalds
str(McDonalds)
# Pull out the Item column from the McDonalds data frame
McDonalds$Item
# Define an IcedTea vector
IcedTea <- c("Iced Tea", 0, 0, 0, FALSE)
# Use rbind() to add the IcedTea vector as a new row to the McDonalds data frame
McDonalds <- rbind(McDonalds, IcedTea)
McDonalds
class(IcedTea)
# Define an IcedTea list
IcedTea <- list("Iced Tea", 0, 0, 0, FALSE)
# Use rbind() to add the IcedTea vector as a new row to the McDonalds data frame
McDonalds <- rbind(McDonalds, IcedTea)
McDonalds
IcedTea
# Remember we previously defined several vectors
item <- c("Egg McMuffin", "Sausage McMuffin", "Baked Apple Pie", "Chocolate Chip Cookie")
calories <- c(300, 370, 250, 160)
fat <- c(13, 23, 13, 8)
protein <- c(17, 14, 2, 2)
meat <- c(TRUE, TRUE, FALSE, FALSE)
# Create a data frame with previously defined vectors
McDonalds <- data.frame(Item = item, Calories = calories, Fat = fat, Protein = protein, Meat = meat)
# Print data frame. Notice: the column names are Item, Calorie, Fat, Protein, and Meat. These columns store values from our previously defined vector
McDonalds
str(McDonalds)
# Define an IcedTea list. List is another data type
IcedTea <- c("Iced Tea", 0, 0, 0, FALSE)
# Use rbind() to add IcedTea as a new row to the McDonalds data frame
McDonalds <- rbind(McDonalds, IcedTea)
McDonalds
str(McDonalds)
# Remember we previously defined several vectors
item <- c("Egg McMuffin", "Sausage McMuffin", "Baked Apple Pie", "Chocolate Chip Cookie")
calories <- c(300, 370, 250, 160)
fat <- c(13, 23, 13, 8)
protein <- c(17, 14, 2, 2)
meat <- c(TRUE, TRUE, FALSE, FALSE)
# Create a data frame with previously defined vectors
McDonalds <- data.frame(Item = item, Calories = calories, Fat = fat, Protein = protein, Meat = meat)
# Print data frame. Notice: the column names are Item, Calorie, Fat, Protein, and Meat. These columns store values from our previously defined vector
McDonalds
# Define an IcedTea list.
# List is another data structure: they can store elements of any type
IcedTea <- list("Iced Tea", 0, 0, 0, FALSE)
# Use rbind() to add IcedTea as a new row to the McDonalds data frame
McDonalds <- rbind(McDonalds, IcedTea)
McDonalds
str(IcedTea)
